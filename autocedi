#!node

const emtech = require("./lib/emtech")
require("dotenv").config()
const db = require("./lib/db");
const { executeAll, processAutomationById, executeEventAutomationById, processAuto } = require("./lib/processor");

const command = process.argv[2]

async function main(){
    switch (command) {
        case "load":
            const walletId = process.argv[3]
            const amount = process.argv[4]
            if(!amount) process.exit(1)
            console.log("paying", amount, "to", walletId, "...")
            const response = await emtech.loadWallet(walletId, amount).catch(err => console.error(`${err.response.status} ${err.response.statusText} ${err.response.data}`))
            console.log("response", response)
            break;
        case "run":
            await run()
            break;
        case "exec":
            const autoId = process.argv[3]
            await runAutomationById(autoId)
            break;
        case "event":
            await eventAutomation(process.argv[3])
            break;
        default:
            console.log("v0.0.0")
    }
}

async function run() {
    console.log("trying to connect to mongo")
    await db.connect().then(() => {
        console.log("connected to mongo")
    }).catch(err => {
        console.error('Error connecting to MongoDB:', err.message);
    });

    console.log("executing all automations")
    await executeAll()
    // emtech.transfer(source, destination, amount)
    process.exit(0)
}

async function runAutomationById(id) {
    console.log("trying to connect to mongo")
    await db.connect().then(() => {
        console.log("connected to mongo")
    }).catch(err => {
        console.error('Error connecting to MongoDB:', err.message);
    });

    console.log("executing automations", id)
    await processAutomationById(id)

    process.exit(0)
}

async function eventAutomation(id){
    console.log("trying to connect to mongo")
    await db.connect().then(() => {
        console.log("connected to mongo")
    }).catch(err => {
        console.error('Error connecting to MongoDB:', err.message);
    });

    console.log("executing all automations")
    await executeEventAutomationById(id)

    process.exit(0)
}

main();